<<<<<<< HEAD
jupyter-book>=0.7.0b
pygeos>=0.7.1
=======
## Dict

Eine `Dict`: 

- ist kurz für *Dictionary*
- speichert die Reihenfolge, in der die Werte eingegeben werden **nicht**
- kann unterschiedliche Datentypen enthalten
- wird mit geschweiften Klammern (`{` und `}`) erstellt
- speichert für jeden Wert ("Value") einen Schlüssel ("Key"), mit dem er abgerufen werden kann:
- `dict_name = {"Key" : "Value}`


menue = {"Vorspeise": "Suppe",
         "Hauptspeise": "Gratin",
         "Dessert": "Eis"}

menue["Vorspeise"]

"Der Koch empfiehlt: "+menue["Vorspeise"] +" zur Vorspeise, "+menue["Hauptspeise"] +" als Hauptgang und "+ menue["Dessert"] +" zum Dessert."

Auch hier sind gemischte Datentypen möglich:

menue = {"Vorspeise": "Suppe",
         "Hauptspeise": ["Gratin","Spinat", "Salat"],
         "Dessert": "Himbeerglacé",
         "Preis": 50}


type(menue)



## DataFrame

Bei den bisherigen Datentypen handelte es sich um Strukturen, die in der Standartinstallation von Python enhalten sind. Tabellarische Strukturen sind in Python, im Gegensatz zu R, nicht standardmässig vorhanden. Dazu brauchen wir eine Erweiterung zu Python: Was es sich damit auf sich hat und wie diese installiert wird erfahren wir später. An dieser Stelle möchte ich nur die Struktur *DataFrame* vorstellen. *DataFrames* sind tabellarische Daten. Man kann sie auch als "Spezialfall" einer *Dict* betrachten, wo alle Werte (also *Keys*) die gleiche Länge haben.


menue2 = {"Typ": ["Vorspeise","Hauptspeise","Dessert"],
          "Beschreibung": ["Suppe","Gratin mit Spinat", "Himbeerglacé"],
          "Preis": [7.50, 32.0, "10.50"]}

type(menue2)

Beachte, dass nun aus den *Key* Spaltennamen werden:

import pandas as pd # Was diese Zeile beudeutet lernen wir später

menue_df = pd.DataFrame(menue2)
menue_df

type(menue_df)
>>>>>>> 8608d32dc8f84282a4b5607a1649fc4fb1739ddc
